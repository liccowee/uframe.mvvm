// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Example {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    
    
    public class LoginScreenControllerBase : SubScreenController {
        
        private uFrame.MVVM.ViewModels.IViewModelManager _LoginScreenViewModelManager;
        
        [uFrame.IOC.InjectAttribute("LoginScreen")]
        public uFrame.MVVM.ViewModels.IViewModelManager LoginScreenViewModelManager {
            get {
                return _LoginScreenViewModelManager;
            }
            set {
                _LoginScreenViewModelManager = value;
            }
        }
        
        public IEnumerable<LoginScreenViewModel> LoginScreenViewModels {
            get {
                return LoginScreenViewModelManager.OfType<LoginScreenViewModel>();
            }
        }
        
        public override void Setup() {
            base.Setup();
            // This is called when the controller is created
        }
        
        public override void Initialize(uFrame.MVVM.ViewModels.ViewModel viewModel) {
            base.Initialize(viewModel);
            // This is called when a viewmodel is created
            this.InitializeLoginScreen(((LoginScreenViewModel)(viewModel)));
        }
        
        public virtual LoginScreenViewModel CreateLoginScreen() {
            return ((LoginScreenViewModel)(this.Create(Guid.NewGuid().ToString())));
        }
        
        public override uFrame.MVVM.ViewModels.ViewModel CreateEmpty() {
            return new LoginScreenViewModel(this.EventAggregator);
        }
        
        public virtual void InitializeLoginScreen(LoginScreenViewModel viewModel) {
            // This is called when a LoginScreenViewModel is created
            viewModel.Login.Action = this.LoginHandler;
            LoginScreenViewModelManager.Add(viewModel);
        }
        
        public override void DisposingViewModel(uFrame.MVVM.ViewModels.ViewModel viewModel) {
            base.DisposingViewModel(viewModel);
            LoginScreenViewModelManager.Remove(viewModel);
        }
        
        public virtual void Login(LoginScreenViewModel viewModel) {
        }
        
        public virtual void LoginHandler(LoginCommand command) {
            this.Login(command.Sender as LoginScreenViewModel);
        }
    }
}
